"use strict";

function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, _regeneratorDefine2(e, r, n, t); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function createPanel(docs) {
  if (document.getElementById("auto-panel")) {
    document.body.removeChild(document.getElementById("auto-panel"));
  }
  var panel = document.createElement("div");
  panel.id = "auto-panel";
  panel.style = "\n    position: fixed;\n    top: 185px;\n    left: 0px;\n    width: 1000px;\n    max-height: 520px;\n    overflow-y: auto;\n    background: white;\n    z-index: 9999;\n    font-family: monospace;\n  ";
  var header = document.createElement("div");
  header.textContent = "Doctools - Automação de Documentos";
  header.id = "header-id";
  header.style = "\n  background: #121212;\n  color: #8b8b8b;\n  padding: 6px 10px;\n  font-weight: bold;\n  border-bottom: 1px solid #444;\n  position: sticky;\n  top: 0;\n  text-align: center;\n  ";
  var table = document.createElement("table");
  table.style = "\n  width: 100%;\n  border-collapse: collapse;";
  table.innerHTML = "\n  <thead>\n  <tr style=\"background: #121212; color: #8b8b8b\">\n    <th style=\"padding:4px;border-bottom:1px solid #444;\">#</th>\n    <th style=\"padding:4px;border-bottom:1px solid #444;\">Documento</th>\n    <th style=\"padding:4px;border-bottom:1px solid #444;\">Status</th>\n  </tr>\n  </thead>\n  <tbody>\n  ".concat(docs.map(function (d, i) {
    return "\n    <tr id=\"doc-row-".concat(i, "\">\n      <td style=\"padding:4px;\">").concat(i + 1, "</td>\n      <td style=\"padding:4px;\">").concat(d, "</td>\n      <td style=\"padding:4px;color:gray;\">Aguardando...</td>\n      </tr>\n    ");
  }).join(""), "\n    </tbody>\n  ");
  panel.appendChild(header);
  panel.appendChild(table);
  document.body.appendChild(panel);
}
function startAutomate(_x, _x2) {
  return _startAutomate.apply(this, arguments);
}
function _startAutomate() {
  _startAutomate = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee(dactes, time) {
    var localErrors, data, _iterator, _step, _step$value, index, dacte, row, statusCell, errorLabel, errorMsg, errorlog, _document$querySelect, _document$querySelect2, fatura, valor, _data, logsRaw, payload, token, link, _t;
    return _regenerator().w(function (_context) {
      while (1) switch (_context.p = _context.n) {
        case 0:
          createPanel(dactes);
          localErrors = localStorage.getItem("log");
          data = localStorage.getItem("data");
          if (localErrors || data) {
            localStorage.removeItem("log");
            localStorage.removeItem("data");
          }
          _iterator = _createForOfIteratorHelper(dactes.entries());
          _context.p = 1;
          _iterator.s();
        case 2:
          if ((_step = _iterator.n()).done) {
            _context.n = 8;
            break;
          }
          _step$value = _slicedToArray(_step.value, 2), index = _step$value[0], dacte = _step$value[1];
          row = document.getElementById("doc-row-".concat(index));
          statusCell = row.querySelector("td:last-child");
          statusCell.textContent = "Processando...";
          statusCell.style.color = "blue";
          document.getElementById("1").value = dacte;
          document.getElementById("2").click();
          _context.n = 3;
          return new Promise(function (resolve) {
            return setTimeout(resolve, time);
          });
        case 3:
          errorLabel = document.getElementById("errormsglabel");
          if (!(errorLabel && errorLabel.innerText.trim() !== "")) {
            _context.n = 5;
            break;
          }
          errorMsg = errorLabel.textContent;
          errorlog = JSON.parse(localStorage.getItem("log") || "[]");
          errorlog.push({
            dacte: dacte,
            errorMsg: errorMsg
          });
          localStorage.setItem("log", JSON.stringify(errorlog));
          document.getElementById("0").click();
          statusCell.textContent = "\uD83D\uDD34 ".concat(errorMsg);
          statusCell.style.color = "#e74c3c";
          _context.n = 4;
          return new Promise(function (resolve) {
            return setTimeout(resolve, time);
          });
        case 4:
          _context.n = 6;
          break;
        case 5:
          statusCell.textContent = "🟢 Faturado";
          statusCell.style.color = "#2ecc71";
        case 6:
          if (index === dactes.length - 1) {
            fatura = ((_document$querySelect = document.querySelector("#nro_fatura")) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.value) || "0";
            valor = ((_document$querySelect2 = document.querySelector("#vlr")) === null || _document$querySelect2 === void 0 ? void 0 : _document$querySelect2.value) || "0";
            _data = {
              fatura: fatura,
              valor_faturado: valor
            };
            logsRaw = JSON.parse(localErrors);
            payload = {
              data: _data,
              logsRaw: logsRaw
            };
            localStorage.setItem("data", JSON.stringify(_data));
            alert("Automação");
            // await generatePDF(localErrors, data)
            token = encodeURIComponent(JSON.stringify(payload));
            link = document.createElement("a");
            link.href = "http://localhost:5173/barcode/decode-report/".concat(token);
            link.target = "_blank";
            link.textContent = "Caso não tenha gerado o relatório automaticamente, clique aqui.";
            document.getElementById("header-id").appendChild(link);
          }
        case 7:
          _context.n = 2;
          break;
        case 8:
          _context.n = 10;
          break;
        case 9:
          _context.p = 9;
          _t = _context.v;
          _iterator.e(_t);
        case 10:
          _context.p = 10;
          _iterator.f();
          return _context.f(10);
        case 11:
          return _context.a(2);
      }
    }, _callee, null, [[1, 9, 10, 11]]);
  }));
  return _startAutomate.apply(this, arguments);
}
function generatePDF(_x3, _x4) {
  return _generatePDF.apply(this, arguments);
}
function _generatePDF() {
  _generatePDF = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2(errorsLog, data) {
    var log, html, printWindow;
    return _regenerator().w(function (_context2) {
      while (1) switch (_context2.n) {
        case 0:
          log = Array.isArray(errorsLog) ? errorsLog : JSON.parse(errorsLog || "[]");
          html = "<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>DocTools - Relat\xF3rio de Automa\xE7\xE3o</title>\n  <style>\n    * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n    }\n\n    :root {\n      --color-background: #ffffff;\n      --color-surface: #f8f9fa;\n      --color-text-primary: #121212;\n      --color-text-secondary: #575757;\n      --color-border: #e0e0e0;\n      --color-primary: #16b4f8;\n      --color-info: #4077d1;\n      --color-success: #47d5a6;\n      --color-danger: #d94a4a;\n    }\n\n    body {\n      font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif;\n      background-color: var(--color-surface);\n      color: var(--color-text-primary);\n      line-height: 1.6;\n      padding: 20px;\n    }\n\n    /* Impress\xE3o */\n    @media print {\n      body {\n        margin: 0;\n        padding: 0;\n      }\n      .page {\n        margin: 0;\n        box-shadow: none;\n        page-break-after: always;\n      }\n    }\n\n    .page {\n      max-width: 297mm;\n      min-height: 210mm;\n      margin: 0 auto;\n      background-color: var(--color-background);\n      padding: 40px 50px;\n      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n      page-break-after: always;\n    }\n\n    .section {\n      margin-bottom: 32px;\n      page-break-inside: avoid;\n    }\n\n    .header {\n      border-bottom: 3px solid var(--color-primary);\n      padding-bottom: 20px;\n      margin-bottom: 40px;\n    }\n\n    .header h1 { font-size: 32px; font-weight: 700; color: var(--color-text-primary); margin-bottom: 8px; }\n    .subtitle { font-size: 14px; color: var(--color-text-secondary); }\n\n    .info-box {\n      padding: 5px 10px;\n      border-radius: 8px;\n      margin-bottom: 16px;\n      border-left: 4px solid;\n    }\n    .info-box h3 { font-size: 16px; font-weight: 600; }\n    .info-box p { font-size: 12px; margin-bottom: 0; }\n    .info-box.info { background-color: rgba(64, 119, 209, 0.08); border-left-color: var(--color-info); }\n    .info-box.success { background-color: rgba(71, 213, 166, 0.08); border-left-color: var(--color-success); }\n    .info-box.danger { background-color: rgba(217, 74, 74, 0.08); border-left-color: var(--color-danger); }\n\n    .table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-top: 16px;\n      font-size: 14px;\n      page-break-inside: auto;\n    }\n    .table thead { background-color: var(--color-surface); }\n    .table th, .table td { padding: 12px; border-bottom: 1px solid var(--color-border); text-align: left; }\n    .table tbody tr:hover { background-color: var(--color-surface); }\n\n    .badge { display: inline-block; padding: 4px 12px; border-radius: 12px; font-size: 12px; font-weight: 600; }\n    .badge.error { background-color: #eb9e9e; color: #9c2121; }\n    .badge.success { background-color: #9ae8ce; color: #22946e; }\n\n    .footer {\n      margin-top: 60px;\n      padding-top: 20px;\n      border-top: 2px solid var(--color-border);\n      display: flex;\n      justify-content: space-between;\n      font-size: 12px;\n      color: var(--color-text-secondary);\n    }\n  </style>\n</head>\n<body>\n  <div class=\"page\">\n    <header class=\"header\">\n      <h1>DocTools - Relat\xF3rio de Automa\xE7\xE3o</h1>\n      <p class=\"subtitle\">Relat\xF3rio gerado em ".concat(new Date().toLocaleString('pt-BR', {
            weekday: "long",
            year: "numeric",
            month: "long",
            day: "numeric",
            hour: "numeric",
            minute: "numeric"
          }), "</p>\n    </header>\n\n    <section class=\"section\">\n      <h2>Resumo</h2>\n      <div class=\"info-box info\">\n        <h3>Fatura</h3>\n        <p>").concat(data.fatura || "Não informada", "</p>\n      </div>\n      \n      <div class=\"info-box success\">\n        <h3>Valor Faturado</h3>\n        <p>").concat(Number(data.valor_faturado || 0).toLocaleString('pt-BR', {
            style: 'currency',
            currency: 'BRL'
          }), "</p>\n      </div>\n      \n      <div class=\"info-box danger\">\n        <h3>Total de Documentos n\xE3o Faturados</h3>\n        <p>").concat(log.length, " documento(s)</p>\n      </div>\n    </section>\n\n    <section class=\"section\">\n      <h2>Documentos Processados</h2>\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th>Documento</th>\n            <th>Status</th>\n            <th>Mensagem</th>\n          </tr>\n        </thead>\n        <tbody>\n          ").concat(log.map(function (item) {
            var documento = item.dacte;
            var message = item.errorMsg;
            return "\n              <tr>\n                <td>".concat(documento, "</td>\n                <td><span class=\"badge error\">Erro</span></td>\n                <td>").concat(message, "</td>\n              </tr>\n            ");
          }).join(''), "\n        </tbody>\n      </table>\n    </section>\n\n    <footer class=\"footer\">\n      <div>\xA9 2025 DocTools - Sistema de Automa\xE7\xE3o de Documentos</div>\n      <div>Gerado em: ").concat(new Date().toLocaleString('pt-BR'), "</div>\n    </footer>\n  </div>\n</body>\n</html>\n  ");
          printWindow = window.open('', '_blank', 'width=900, height=700');
          if (printWindow) {
            _context2.n = 1;
            break;
          }
          alert("Não foi possível abrir a janela de impressão. Copie o token de resultados e cole no site para gerar o relatório manualmente.");
          return _context2.a(2);
        case 1:
          printWindow.document.open();
          printWindow.document.writeln(html);
          printWindow.document.close();
          printWindow.onload = function () {
            printWindow.focus();
            printWindow.print();
          };
        case 2:
          return _context2.a(2);
      }
    }, _callee2);
  }));
  return _generatePDF.apply(this, arguments);
}
startAutomate(documentos, time);